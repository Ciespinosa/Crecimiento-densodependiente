marCrec <- crecE(N0=35, r = rMx, t = 1:100)
plot(marCrec, type="l")
mariposas <- c(35, 30, 89, 160, 312)
lamM <- mariposas[2:5]/mariposas[1:4]
rM <- log(lamM)
crecE <- function(N0,r,t ){
N <- N0*exp(r*t)
return(N)
}
rMx <- prod(rM)^1/4
marCrec <- crecE(N0=35, r = rMx, t = 1:100)
plot(marCrec, type="l")
rMx
rM
mariposas <- c(35, 40, 89, 160, 312)
lamM <- mariposas[2:5]/mariposas[1:4]
rM <- log(lamM)
crecE <- function(N0,r,t ){
N <- N0*exp(r*t)
return(N)
}
rMx <- prod(rM)^1/4
marCrec <- crecE(N0=35, r = rMx, t = 1:100)
plot(marCrec, type="l")
marCrec <- crecE(N0=35, r = rMx, t = 1:200)
plot(marCrec, type="l")
mariposas <- c(15, 40, 89, 160, 312)
lamM <- mariposas[2:5]/mariposas[1:4]
rM <- log(lamM)
crecE <- function(N0,r,t ){
N <- N0*exp(r*t)
return(N)
}
rMx <- prod(rM)^1/4
marCrec <- crecE(N0=35, r = rMx, t = 1:200)
plot(marCrec, type="l")
rMx
mariposas <- c(10, 25, 89, 160, 312)
lamM <- mariposas[2:5]/mariposas[1:4]
rM <- log(lamM)
crecE <- function(N0,r,t ){
N <- N0*exp(r*t)
return(N)
}
rMx <- prod(rM)^1/4
marCrec <- crecE(N0=35, r = rMx, t = 1:200)
plot(marCrec, type="l")
marCrec <- crecE(N0=35, r = rMx, t = 1:100)
plot(marCrec, type="l")
marCrec <- crecE(N0=35, r = rMx, t = 1:50)
plot(marCrec, type="l")
marCrec <- crecE(N0=80, r = rMx, t = 1:50)
plot(marCrec, type="l")
marCrec <- crecE(N0=15, r = rMx, t = 1:50)
plot(marCrec, type="l")
marCrecE <- crecE(N0=15, r = rMx, t = 1:50)
marCrec <- crec(N=15, r = prod(lamM)^1/4, t = 1:50)
crec <- function(lambda, t, N){
N <- lambda^t * N
return(N)
}
marCrec <- crec(N=15, lambda = prod(lamM)^1/4, t = 1:50)
marCrec
plot(marCrec, type="l")
lines(marCrec)
plot(marCrec, type="l")
plot(marCrecE, type="l")
lines(marCrec)
marCrec <- crec(N=15, lambda = 2, t = 1:50)
marCrecE <- crecE(N0=15, r = log(2), t = 1:50)
marCrec <- crec(N=15, lambda = 2, t = 1:50)
plot(marCrecE, type="l")
lines(marCrec)
marCrecE <- crecE(N0=15, r = log(2), t = 1:50)
marCrec <- crec(N=15, lambda = 2, t = 1:50)
marCrec
plot(marCrecE, type="l")
lines(marCrec)
plot(marCrecE, type="l")
marCrecE
marCrec
plot(marCrecE, type="l")
lines(marCrec, col="red")
marCrecE <- crecE(N0=15, r = rMx, t = 1:50)
plot(marCrec, type="l")
lamM <- mariposas[2:5]/mariposas[1:4]
rM <- log(lamM)
crecE <- function(N0,r,t ){
N <- N0*exp(r*t)
return(N)
}
rMx <- prod(rM)^1/4
marCrecE <- crecE(N0=15, r = rMx, t = 1:50)
plot(marCrec, type="l")
marCrec
plot(marCrecE, type="l")
sparrows
dta(sparrows)
rSpa <- log(lamSppg)
rSpa
dta(sparrows)
popSp <- sparrows[1:10,2]
lambdaSp <- popSp[2:10]/popSp[1:10-1]
lamSppg <- prod(lambdaSp)^(1/10)
rSpa <- log(lamSppg)
popSp <- sparrows[1:10,2]
dta(sparrows)
data(sparrows)
library(primer)
data(sparrows)
popSp <- sparrows[1:10,2]
lambdaSp <- popSp[2:10]/popSp[1:10-1]
lamSppg <- prod(lambdaSp)^(1/10)
rSpa <- log(lamSppg)
rSpa
proy1 <- crecE(N0 = sparrows[10,2], r =  rSpa, t = 1:(36-10) )
plot(sparrows$Year, sparrows$Count)
plot(sparrows$Year, sparrows$Count, type="l")
lines(sparrows$Year[10:36], proy1)
lines(sparrows$Year[11:36], proy1)
plot(sparrows$Year, sparrows$Count, type="l", ylim=c(0,300))
lines(sparrows$Year[11:36], proy1)
crecE(20,0.1,1:20)
r1 <- crecE(20,0.1,1:20)
r2 <- crecE(20,0,1:20)
r3 <- crecE(20,-0.1,1:20)
plot(r1)
plot(r1, type="l")
r1 <- crecE(20,0.05,1:20)
r2 <- crecE(20,0,1:20)
r3 <- crecE(20,-0.05,1:20)
plot(r1, type="l", ylim=c(0,200))
r1 <- crecE(20,0.08,1:20)
plot(r1, type="l", ylim=c(0,200))
plot(r1, type="l", ylim=c(-100,100))
lines(r2, col="darkred")
plot(r1, type="l", ylim=c(-100,100), col="green")
lines(r2, col="darkred", lty=2)
lines(r, lty=3)
plot(r1, type="l", ylim=c(-100,100), col="green")
lines(r2, col="darkred", lty=2)
lines(r3, lty=3)
r1 <- crecE(20,0.08,1:20)
r2 <- crecE(20,0,1:20)
r3 <- crecE(20,-0.08,1:20)
plot(r1, type="l", ylim=c(-100,100), col="green")
lines(r2, col="darkred", lty=2)
lines(r3, lty=3)
r1 <- crecE(20,0.1,1:20)
r2 <- crecE(20,0,1:20)
r3 <- crecE(20,-0.1,1:20)
plot(r1, type="l", ylim=c(-100,100), col="green")
lines(r2, col="darkred", lty=2)
lines(r3, lty=3)
r1 <- crecE(20,0.1,1:20)
r2 <- crecE(20,0,1:20)
r3 <- crecE(20,-0.1,1:20)
plot(r1, type="l", ylim=c(-50,150), col="green")
lines(r2, col="darkred", lty=2)
lines(r3, lty=3)
plot(r1, type="l", ylim=c(-10,150), col="green")
lines(r2, col="darkred", lty=2)
lines(r3, lty=3)
r3 <- crecE(20,-0.3,1:20)
plot(r1, type="l", ylim=c(-10,150), col="green")
lines(r2, col="darkred", lty=2)
lines(r3, lty=3)
r1 <- crecE(40,0.1,1:20)
r2 <- crecE(40,0,1:20)
r3 <- crecE(40,-0.3,1:20)
plot(r1, type="l", ylim=c(-10,150), col="green")
lines(r2, col="darkred", lty=2)
lines(r3, lty=3)
r3 <- crecE(40,-0.1,1:20)
plot(r1, type="l", ylim=c(-10,150), col="green")
lines(r2, col="darkred", lty=2)
lines(r3, lty=3)
r1 <- crecE(40,0.07,1:20)
r2 <- crecE(40,0,1:20)
r3 <- crecE(40,-0.1,1:20)
plot(r1, type="l", ylim=c(-10,150), col="green")
lines(r2, col="darkred", lty=2)
lines(r3, lty=3)
r1 <- crecE(40,0.06,1:20)
r2 <- crecE(40,0,1:20)
r3 <- crecE(40,-0.1,1:20)
plot(r1, type="l", ylim=c(-10,150), col="green")
lines(r2, col="darkred", lty=2)
lines(r3, lty=3)
text(5,55, "r>0")
text(5,60, "r>0")
text(5,60, "r>0", font=2)
text(5,60, "r>0", font=2, cex=1.5)
text(5,45, "r=0", font=2, cex=1.5)
text(5,35, "r<0", font=2, cex=1.5)
text(5,30, "r<0", font=2, cex=1.5)
plot(r1, type="l", ylim=c(-10,150), col="green")
lines(r2, col="darkred", lty=2)
lines(r3, lty=3)
text(5,60, "r>0", font=2, cex=1.5)
text(5,45, "r=0", font=2, cex=1.5)
text(5,30, "r<0", font=2, cex=1.5)
plot(r1, type="l", ylim=c(-10,150), col="green", main="Tasa instantanea de crecimiento")
lines(r2, col="darkred", lty=2)
lines(r3, lty=3)
text(5,60, "r>0", font=2, cex=1.5)
text(5,45, "r=0", font=2, cex=1.5)
text(5,30, "r<0", font=2, cex=1.5)
years<- 50
set.seed(12)
sim.Rs <- sample(x = obs.R, size = years,
replace = TRUE)
# Chunk 1
#Tamaño de la mariposa durante los 13 meses
N<- c(2,4,8,16,32)
#Tiempo en el cual se hizo la observación
tiempo <- seq(as.POSIXct("2018-01-15"),as.POSIXct("2019-02-15"), by=60*60*24*30*3)
plot(tiempo, N, type="b",
xlab="Meses de muestreo",
ylab="Tamaño. N")
# Chunk 2
#Dividimos el tamaño de el periodo posterior para el anterior
tasa <- N[2:5]/N[1:4]
tasa
# Chunk 3
# hacemos una función para calcular el tamaño de la población
crec <- function(lambda, t, N){
N <- lambda^t * N
return(N)
}
##Proyectemos a cuatro periodos y comparemos con la población
crec(2,4,2)
N
##Qué pasará en 3 años con 12 periodos
crec(2,12,2)
# Chunk 4
N0 <- c(10,20, 30) #tres tamaños distintos
t <- c(0:6) #seis periodos
Nm <- matrix(NA,7,3)
for(i in 1:3){
Nm[,i] <- crec(2,t=t, N=N0[i])
}
matplot(Nm, type="b")
# Chunk 5
matplot(log(Nm), type="b")
# Chunk 6
lam <- c(0.5,1, 1.5) #tres tamaños distintos
t <- c(0:4) #seis periodos
Lm <- matrix(NA,5,3)
for(i in 1:3){
Lm[,i] <- crec(lambda = lam[i],t=t, N=10)
}
matplot(Lm, type="b")
text(2.5,30, "lambda>1 - Pob. Crece")
text(2,0, "lambda<1 - Pob. Decrece")
text(4,12, "lambda>1 - Pob. se mantiene")
# Chunk 7
#Nuestros datos
ninfalidos <- c(100, 50, 75)
#obtengamos lambda
ninL <- ninfalidos[2:3]/ninfalidos[1:2]
ninL
#obtenemos la media
xL <- mean(ninL)
#usamos nuestra función
crec(lambda = xL, t = 3,N = 100)
#según nuestro modelo deberíamos tener 100 individuos, pero
#realmente tenemos 75, nuestro modelo no funcionó
# Chunk 8
#calculamos la media aritmética
xgL <- prod(ninL)^(1/3)
#usamos nuestra función
crec(lambda = xgL, t = 3,N = 100)
# Chunk 9
library(primer)
data(sparrows)
head(sparrows, 5)
# Chunk 10
inputPanel(
sliderInput("Lm", label = "Lambda:",
min = 5, max = 26, value = 5, step = 2)
)
renderPlot({
popSp <- sparrows[1:input$Lm,2]
lambdaSp <- popSp[2:input$Lm]/popSp[1:input$Lm-1]
lamSppg <- prod(lambdaSp)^(1/input$Lm)
proy1 <- crec(lambda = lamSppg, t = 1:(36-input$Lm), N = sparrows[input$Lm,2])
proy1 <- c(sparrows$Count[1:input$Lm], proy1)
plot(sparrows$Year, sparrows$Count, type="l", ylim=c(0,220), xlab="Años", ylab="Abundancia")
lines(sparrows$Year, proy1, col ="darkred", ldw=1.4)
lines(sparrows$Year[1:input$Lm], proy1[1:input$Lm], col ="darkblue", ldw=1.4)
mtext("Crecimiento de gorriones en Darrtown, OH", side=3, adj=0, line=0.7, cex=2, font=2)
}
)
# Chunk 11
n <- 1:100 #entre 1 y 100 periodos en el año
N0 <- 1 #población inicial de 1
rd <- 1 #tasa de incremento discreto
#Calculamos el tamaño de la población
N1 <- N0 * (1 + rd/n)^n
#Graficamos los datos
plot(n, N1/N0, type = "l")
text(50, 2, "For n = 100,")
text(50, 1.6, bquote((1 + frac("r"["d"], "n"))^"n" == + .(round(N1[101]/N0, 3))))
# Chunk 12
#nuestra población
mariposas <- c(10, 25, 89, 160, 312)
#obtenemos lambda
lamM <- mariposas[2:5]/mariposas[1:4]
#convertimos lambda en r
rM <- log(lamM)
##Hacemos una función de crecimiento exponencial
crecE <- function(N0,r,t ){
N <- N0*exp(r*t)
return(N)
}
#obtenemos la media aritmetica de r
rMx <- prod(rM)^1/4
#proyectamos la población
marCrecE <- crecE(N0=15, r = rMx, t = 1:50)
plot(marCrecE, type="l")
# Chunk 13
r1 <- crecE(40,0.06,1:20)
r2 <- crecE(40,0,1:20)
r3 <- crecE(40,-0.1,1:20)
plot(r1, type="l", ylim=c(-10,150), col="green", main="Tasa instantanea de crecimiento")
lines(r2, col="darkred", lty=2)
lines(r3, lty=3)
text(5,60, "r>0", font=2, cex=1.5)
text(5,45, "r=0", font=2, cex=1.5)
text(5,30, "r<0", font=2, cex=1.5)
# Chunk 14
library(primer)
data("sparrows")
names(sparrows)
attach(sparrows)
# Chunk 15
par(mfcol=c(1,2))
plot(Year, Count, type="b", pch=19)
obs.R <- Count[-1]/Count[-length(Count)]
plot(Year[-1], obs.R, pch=19)
abline(h = 1, lty = 3)
# Chunk 16
years<- 50
set.seed(12)
sim.Rs <- sample(x = obs.R, size = years,
replace = TRUE)
sim.Rs
sim1 <- crec(lambda = sim.Rs, t = 50, N = 50)
plot(0:years, sim1, type="l")
plot(1:years, sim1, type="l")
sim.Rs
sim1 <- crec(lambda = sim.Rs, t = 1:50, N = 50)
sim1 <- crec(lambda = sim.Rs, t = 0:50, N = 50)
sim1 <- crec(lambda = sim.Rs, t = 1:50, N = 50)
plot(1:years, sim1, type="l")
sim1
output <- numeric(years + 1)
output
output[1] <- Count[Year == max(Year)]
output
t
for (t in 1:years) {
output[t + 1] <- output[t] * sim.Rs[t] }
output
plot(0:years, output, type="l")
sim1 <- numeric(years + 1)
sim1[1] <- Count[Year == max(Year)]
for (t in 1:years) {
sim1[t + 1] <- sim1[t] * sim.Rs[t] }
# Chunk 1
#Tamaño de la mariposa durante los 13 meses
N<- c(2,4,8,16,32)
#Tiempo en el cual se hizo la observación
tiempo <- seq(as.POSIXct("2018-01-15"),as.POSIXct("2019-02-15"), by=60*60*24*30*3)
plot(tiempo, N, type="b",
xlab="Meses de muestreo",
ylab="Tamaño. N")
# Chunk 2
#Dividimos el tamaño de el periodo posterior para el anterior
tasa <- N[2:5]/N[1:4]
tasa
# Chunk 3
# hacemos una función para calcular el tamaño de la población
crec <- function(lambda, t, N){
N <- lambda^t * N
return(N)
}
##Proyectemos a cuatro periodos y comparemos con la población
crec(2,4,2)
N
##Qué pasará en 3 años con 12 periodos
crec(2,12,2)
# Chunk 4
N0 <- c(10,20, 30) #tres tamaños distintos
t <- c(0:6) #seis periodos
Nm <- matrix(NA,7,3)
for(i in 1:3){
Nm[,i] <- crec(2,t=t, N=N0[i])
}
matplot(Nm, type="b")
# Chunk 5
matplot(log(Nm), type="b")
# Chunk 6
lam <- c(0.5,1, 1.5) #tres tamaños distintos
t <- c(0:4) #seis periodos
Lm <- matrix(NA,5,3)
for(i in 1:3){
Lm[,i] <- crec(lambda = lam[i],t=t, N=10)
}
matplot(Lm, type="b")
text(2.5,30, "lambda>1 - Pob. Crece")
text(2,0, "lambda<1 - Pob. Decrece")
text(4,12, "lambda>1 - Pob. se mantiene")
# Chunk 7
#Nuestros datos
ninfalidos <- c(100, 50, 75)
#obtengamos lambda
ninL <- ninfalidos[2:3]/ninfalidos[1:2]
ninL
#obtenemos la media
xL <- mean(ninL)
#usamos nuestra función
crec(lambda = xL, t = 3,N = 100)
#según nuestro modelo deberíamos tener 100 individuos, pero
#realmente tenemos 75, nuestro modelo no funcionó
# Chunk 8
#calculamos la media aritmética
xgL <- prod(ninL)^(1/3)
#usamos nuestra función
crec(lambda = xgL, t = 3,N = 100)
# Chunk 9
library(primer)
data(sparrows)
head(sparrows, 5)
# Chunk 10
inputPanel(
sliderInput("Lm", label = "Lambda:",
min = 5, max = 26, value = 5, step = 2)
)
renderPlot({
popSp <- sparrows[1:input$Lm,2]
lambdaSp <- popSp[2:input$Lm]/popSp[1:input$Lm-1]
lamSppg <- prod(lambdaSp)^(1/input$Lm)
proy1 <- crec(lambda = lamSppg, t = 1:(36-input$Lm), N = sparrows[input$Lm,2])
proy1 <- c(sparrows$Count[1:input$Lm], proy1)
plot(sparrows$Year, sparrows$Count, type="l", ylim=c(0,220), xlab="Años", ylab="Abundancia")
lines(sparrows$Year, proy1, col ="darkred", ldw=1.4)
lines(sparrows$Year[1:input$Lm], proy1[1:input$Lm], col ="darkblue", ldw=1.4)
mtext("Crecimiento de gorriones en Darrtown, OH", side=3, adj=0, line=0.7, cex=2, font=2)
}
)
# Chunk 11
n <- 1:100 #entre 1 y 100 periodos en el año
N0 <- 1 #población inicial de 1
rd <- 1 #tasa de incremento discreto
#Calculamos el tamaño de la población
N1 <- N0 * (1 + rd/n)^n
#Graficamos los datos
plot(n, N1/N0, type = "l")
text(50, 2, "For n = 100,")
text(50, 1.6, bquote((1 + frac("r"["d"], "n"))^"n" == + .(round(N1[101]/N0, 3))))
# Chunk 12
#nuestra población
mariposas <- c(10, 25, 89, 160, 312)
#obtenemos lambda
lamM <- mariposas[2:5]/mariposas[1:4]
#convertimos lambda en r
rM <- log(lamM)
##Hacemos una función de crecimiento exponencial
crecE <- function(N0,r,t ){
N <- N0*exp(r*t)
return(N)
}
#obtenemos la media aritmetica de r
rMx <- prod(rM)^1/4
#proyectamos la población
marCrecE <- crecE(N0=15, r = rMx, t = 1:50)
plot(marCrecE, type="l")
# Chunk 13
r1 <- crecE(40,0.06,1:20)
r2 <- crecE(40,0,1:20)
r3 <- crecE(40,-0.1,1:20)
plot(r1, type="l", ylim=c(-10,150), col="green", main="Tasa instantanea de crecimiento")
lines(r2, col="darkred", lty=2)
lines(r3, lty=3)
text(5,60, "r>0", font=2, cex=1.5)
text(5,45, "r=0", font=2, cex=1.5)
text(5,30, "r<0", font=2, cex=1.5)
# Chunk 14
library(primer)
data("sparrows")
names(sparrows)
attach(sparrows)
# Chunk 15
par(mfcol=c(1,2))
plot(Year, Count, type="b", pch=19)
obs.R <- Count[-1]/Count[-length(Count)]
plot(Year[-1], obs.R, pch=19)
abline(h = 1, lty = 3)
# Chunk 16
years<- 50
set.seed(12)
sim.Rs <- sample(x = obs.R, size = years,
replace = TRUE)
# Chunk 17
sim1 <- numeric(years + 1)
sim1[1] <- Count[Year == max(Year)]
for (t in 1:years) {
sim1[t + 1] <- sim1[t] * sim.Rs[t] }
# Chunk 18
plot(0:years, output, type="l")
